name: CI + Deploy (main)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ci-deploy-main
  cancel-in-progress: true

jobs:
  test:
    name: Build & Test (Docker)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image
        run: |
          docker build -t weebbackend:${{ github.sha }} .

      - name: Run Django tests inside container
        env:
          DJANGO_SECRET_KEY: "ci-secret"
          DJANGO_DEBUG: "0"
        run: |
          docker run --rm \
            -e DJANGO_SECRET_KEY \
            -e DJANGO_DEBUG \
            weebbackend:${{ github.sha }} \
            python manage.py test --noinput -v 2

  deploy:
    name: Deploy to RPi (only on main)
    runs-on: ubuntu-latest
    needs: test
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && success() }}

    steps:
      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add host to known_hosts
        shell: bash
        run: |
          set -euo pipefail
          if [[ -z "${{ secrets.SSH_HOST }}" || -z "${{ secrets.SSH_PORT }}" ]]; then
          echo "SSH_HOST or SSH_PORT is empty. Check your repository secrets." >&2
          exit 1
          fi
          mkdir -p ~/.ssh
          ssh-keyscan -T 10 -p "${{ secrets.SSH_PORT }}" "${{ secrets.SSH_HOST }}" >> ~/.ssh/known_hosts 2>/dev/null || {
          echo "ssh-keyscan failed (host unreachable?). Continuing anywayâ€¦" >&2
          }

      - name: Remote deploy
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          script_stop: true
          script: |
            bash /home/rpiserver/weeb-website-django/deploy.sh
